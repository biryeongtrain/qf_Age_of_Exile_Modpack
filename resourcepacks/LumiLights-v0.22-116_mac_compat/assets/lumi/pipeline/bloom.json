{
    programs: [
        {
            // copies colored pixels from main color buffer if marked emissive
            name: "emissive_color",
            vertexSource: "lumi:shaders/post/simple.vert",
            fragmentSource: "lumi:shaders/post/emissive_color.frag",
            samplers: [
                "u_base",
                "u_emissive",
                "u_emissive_translucent",
                "u_solid_depth"
            ]
        }, {
            // combines final bloom image and main color buffer
            name: "bloom",
            vertexSource: "lumi:shaders/post/simple.vert",
            fragmentSource: "lumi:shaders/post/bloom.frag",
            samplers: ["u_base", "u_bloom"]
        }, {
            // uses a fancy sampling algo for higher quality, not a conventional mipmap
            name: "downsample",
            vertexSource: "lumi:shaders/post/simple.vert",
            fragmentSource: "lumi:shaders/post/downsample.frag",
            samplers: ["u_input"]
        }, {
            // less fancy (but still slightly fancy) upsample of downsample outputs
            name: "upsample_first",
            vertexSource: "lumi:shaders/post/simple.vert",
            fragmentSource: "lumi:shaders/post/upsample_first.frag",
            samplers: ["u_input"]
        }, {
            name: "upsample",
            // same as upsample_first but combines with next lower level of detail
            vertexSource: "lumi:shaders/post/simple.vert",
            fragmentSource: "lumi:shaders/post/upsample.frag",
            samplers: ["u_input", "u_prior"]
        }
    ],

    afterRenderHand: {
        passes: [
            {
                // select emissive portions for blur
                name: "emissive_color",
                program: "emissive_color",
                framebuffer: "emissive_color",
                samplerImages: [
                    // solid_main = from hand render without taa
                    "solid_main",
                    "emissive",
                    "emissive_translucent",
                    "solid_depth"
                ]
            }, {
                // build bloom mipmaps, blurring as part of downscale
                name: "bloom_downsample_0",
                program: "downsample",
                framebuffer: "bloom_downsample_0",
                samplerImages: ["emissive_color"],
            }, {
                name: "bloom_downsample_1",
                program: "downsample",
                framebuffer: "bloom_downsample_1",
                samplerImages: ["bloom_downsample"],
                lod: 1
            }, {
                name: "bloom_downsample_2",
                program: "downsample",
                framebuffer: "bloom_downsample_2",
                samplerImages: ["bloom_downsample"],
                lod: 2
            }, {
                name: "bloom_downsample_3",
                program: "downsample",
                framebuffer: "bloom_downsample_3",
                samplerImages: ["bloom_downsample"],
                lod: 3
            }, {
                name: "bloom_downsample_4",
                program: "downsample",
                framebuffer: "bloom_downsample_4",
                samplerImages: ["bloom_downsample"],
                lod: 4
            }, {
                name: "bloom_downsample_5",
                program: "downsample",
                framebuffer: "bloom_downsample_5",
                samplerImages: ["bloom_downsample"],
                lod: 5
            }, {
                name: "bloom_downsample_6",
                program: "downsample",
                framebuffer: "bloom_downsample_6",
                samplerImages: ["bloom_downsample"],
                lod: 6
            }, {
                // upscale bloom mipmaps, bluring again as we go
                name: "bloom_upsample_6",
                program: "upsample_first",
                framebuffer: "bloom_upsample_6",
                samplerImages: ["bloom_downsample"],
                lod: 6
            }, {
                name: "bloom_upsample_5",
                program: "upsample",
                framebuffer: "bloom_upsample_5",
                samplerImages: ["bloom_downsample", "bloom_upsample"],
                lod: 5
            }, {
                name: "bloom_upsample_4",
                program: "upsample",
                framebuffer: "bloom_upsample_4",
                samplerImages: ["bloom_downsample", "bloom_upsample"],
                lod: 4
            }, {
                name: "bloom_upsample_3",
                program: "upsample",
                framebuffer: "bloom_upsample_3",
                samplerImages: ["bloom_downsample", "bloom_upsample"],
                lod: 3
            }, {
                name: "bloom_upsample_2",
                program: "upsample",
                framebuffer: "bloom_upsample_2",
                samplerImages: ["bloom_downsample", "bloom_upsample"],
                lod: 2
            }, {
                name: "bloom_upsample_1",
                program: "upsample",
                framebuffer: "bloom_upsample_1",
                samplerImages: ["bloom_downsample", "bloom_upsample"],
                lod: 1
            }, {
                name: "bloom_upsample_0",
                program: "upsample",
                framebuffer: "bloom_upsample_0",
                samplerImages: ["bloom_downsample", "bloom_upsample"],
                lod: 0
            }, {
                // Switch back to MC main color to draw combined color + bloom
                // Framebuffer attachment shouldn't draw to self so use copy created earlier
                name: "bloom",
                program: "bloom",
                framebuffer: "bloom",
                // main_copy = from taa
                samplerImages: ["main_copy", "bloom_upsample"]
            }
        ]
    },

    images: [

        // result of applying the emissive map to base color - source for the downsample/upsample
        {
            name: "emissive_color",
            lod: 0,
            internalFormat: "RGBA8",
            target: "TEXTURE_2D",
            texParams: [
                {name: "TEXTURE_MIN_FILTER", val: "LINEAR"},
                {name: "TEXTURE_MAG_FILTER", val: "LINEAR"},
                {name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"},
                {name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"}
            ]
        },

        // these next two hold the cascade of bloom images that are blurred
        {
            name: "bloom_downsample",
            lod: 6,
            internalFormat: "RGBA8",
            target: "TEXTURE_2D",
            texParams: [
                {name: "TEXTURE_MIN_FILTER", val: "LINEAR_MIPMAP_NEAREST"},
                {name: "TEXTURE_MAG_FILTER", val: "LINEAR"},
                {name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"},
                {name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"}
            ]
        },

        {
            name: "bloom_upsample",
            lod: 6,
            internalFormat: "RGBA8",
            target: "TEXTURE_2D",
            texParams: [
                {name: "TEXTURE_MIN_FILTER", val: "LINEAR_MIPMAP_NEAREST"},
                {name: "TEXTURE_MAG_FILTER", val: "LINEAR"},
                {name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"},
                {name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"}
            ]
        }
    ],

    framebuffers: [
        {
            // TODO: should be able to remove this now
            name: "emissive",
            colorAttachments: [{image: "emissive", clearColor: 0x00000000}]
        }, {
            name: "emissive_color",
            colorAttachments: [{image: "emissive_color"}]
        }, {
            name: "bloom_downsample_0",
            colorAttachments: [{image: "bloom_downsample"}]
        }, {
            name: "bloom_downsample_1",
            colorAttachments: [{image: "bloom_downsample", lod: 1}]
        }, {
            name: "bloom_downsample_2",
            colorAttachments: [{image: "bloom_downsample", lod: 2}]
        }, {
            name: "bloom_downsample_3",
            colorAttachments: [{image: "bloom_downsample", lod: 3}]
        }, {
            name: "bloom_downsample_4",
            colorAttachments: [{image: "bloom_downsample", lod: 4}]
        }, {
            name: "bloom_downsample_5",
            colorAttachments: [{image: "bloom_downsample", lod: 5}]
        }, {
            name: "bloom_downsample_6",
            colorAttachments: [{image: "bloom_downsample", lod: 6}]
        }, {
            name: "bloom_upsample_6",
            colorAttachments: [{image: "bloom_upsample", lod: 6}]
        }, {
            name: "bloom_upsample_5",
            colorAttachments: [{image: "bloom_upsample", lod: 5}]
        }, {
            name: "bloom_upsample_4",
            colorAttachments: [{image: "bloom_upsample", lod: 4}]
        }, {
            name: "bloom_upsample_3",
            colorAttachments: [{image: "bloom_upsample", lod: 3}]
        }, {
            name: "bloom_upsample_2",
            colorAttachments: [{image: "bloom_upsample", lod: 2}]
        }, {
            name: "bloom_upsample_1",
            colorAttachments: [{image: "bloom_upsample", lod: 1}]
        }, {
            name: "bloom_upsample_0",
            colorAttachments: [{image: "bloom_upsample"}]
        }, {
            // TODO: just use main fb instead?
            name: "bloom",
            colorAttachments: [{image: "solid_main"}]
        }
    ]
}
